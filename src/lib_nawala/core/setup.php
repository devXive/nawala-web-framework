<?php
/**
 * @package          Nawala Rapid Development Kit
 * @subPackage	Nawala - Library
 * @author           devXive - research and development <support@devxive.com> (http://www.devxive.com)
 * @copyright        Copyright (C) 1997 - 2013 devXive - research and development. All rights reserved.
 * @license          GNU General Public License version 2 or later; see LICENSE.txt
 * @assetsLicense    devXive Proprietary Use License (http://www.devxive.com/license)
 */

// Check to ensure this file is included in Nawala!RDK environment
defined('_NRDKRA') or die;

/**
 * Nawala Framework CoreSetup Class
 *
 * Class that buil and push all informations we need in all nawala environments
 *
 * @package       Framework
 * @subpackage    Core
 * @since         1.0
 */
class NCoreSetup
{
	/**
	 * @var    string    $basePath    System base website path
	 * @var    string    $baseUrl     Url base website path
	 */
	static $basePath;
	static $baseUrl;

	/**
	 * @var    string    $templateName      Name of the active template
	 * @var    string    $templatePath      Path of the active template
	 * @var    string    $templateUrl       Url of the active template
	 * @var    string    $templatePrefix    Autogenerated template prefix of the active template
	 */
	public $templateName;
	static $templatePath;
	static $templateUrl;
	static $templatePrefix;

	/**
	 * @var    string    $basePath    System path to nawala library
	 * @var    string    $baseUrl     Url path to nawala library
	 */
	static $nawalaPath;
	static $nawalaUrl;

	/**
	 * Path for the compressed / combined files, which will be used later to load files from
	 *
	 * @var    string    $cachePath    System path to nawala cache dir
	 * @var    string    $cacheUrl     Url path to nawala cache dir
	 */
	static $cachePath;
	static $cacheUrl;


	/**
	 * Constructor
	 * Note that static vars can not be override!
	 */
	public function __construct( array $data = array() )
	{
		// Init global
		global $nawala;

		// Initialize Setup
		$this->init();

		// Set optionals
		$this->set( $data );
	}


	public function init() {
		// Init global
		global $nawala;

		$doc = JFactory::getDocument();
		$app = JFactory::getApplication();

		$this->basePath = JPATH_ROOT;
		$this->baseUrl  = JURI::base(true);
		$this->baseHttp = substr(JURI::base(), 0, -1); // Strip last char (trailing slash /)

		$this->templateName   = $app->getTemplate();
		$this->templatePath   = $this->basePath . '/templates/' . $this->templateName;
		$this->templateUrl    = $this->baseUrl . '/templates/' . $this->templateName;
		$this->templatePrefix = $this->templateName . '-';

		$this->nawalaPath = $this->basePath . '/libraries/nawala';
		$this->nawalaUrl  = $this->baseUrl . '/libraries/nawala';

		$this->cachePath = $this->basePath . '/cache/nawala';
		$this->cacheUrl  = $this->baseUrl . '/cache/nawala';

		// Declare the main Entry Points to look for
		$this->stylePaths = array(
			$this->templatePath . '/less',
			$this->templatePath . '/css',
			$this->templatePath . '/js',
			$this->nawalaPath . '/assets/less',
			$this->nawalaPath . '/assets/css',
			$this->nawalaPath . '/assets/js'
		);


		// aggregated
		$this->document = $doc;
		$this->application = $app;
	}


	public function set( array $data = array() ) {
		// Init global
		global $nawala;

		if ( is_array($data) && $data ) {
			foreach ( $data as $key => $val ) {
				$this->$key = $val;
			}
		}
	}
}